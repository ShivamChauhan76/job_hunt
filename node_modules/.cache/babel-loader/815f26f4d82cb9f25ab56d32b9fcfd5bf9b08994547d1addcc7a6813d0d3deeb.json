{"ast":null,"code":"var _jsxFileName = \"D:\\\\job_hunt\\\\src\\\\ScrollupButton.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollupButton = () => {\n  _s();\n  const [top, setTop] = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      if (window.scrollY > 100) {\n        setTop(true);\n      } else {\n        setTop(false);\n      }\n    });\n  }, []);\n  const ScrollUp = () => {\n    window.scrollTo({\n      top: 0,\n      behaviour: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: top && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: 'fixed',\n        bottom: '50px',\n        right: '50px',\n        height: '50px',\n        width: '50px',\n        fontSize: '50px'\n      },\n      onClick: ScrollUp,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa-solid fa-arrow-up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollupButton, \"SoHa2Ry+plmqIS0AtsduhsRsxa0=\");\n_c = ScrollupButton;\nexport default ScrollupButton;\nvar _c;\n$RefreshReg$(_c, \"ScrollupButton\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ScrollupButton","_s","top","setTop","window","addEventListener","scrollY","ScrollUp","scrollTo","behaviour","children","style","position","bottom","right","height","width","fontSize","onClick","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/job_hunt/src/ScrollupButton.js"],"sourcesContent":["import React from 'react';\r\nimport { useEffect , useState } from 'react';\r\n\r\nconst ScrollupButton = () => {\r\n\r\n    const [top , setTop] = useState(false)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll' , () => {\r\n            if(window.scrollY > 100){\r\n                setTop(true);\r\n            }\r\n            else{\r\n                setTop(false);\r\n            }\r\n        })\r\n    } , [])\r\n\r\n    const ScrollUp = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behaviour : 'smooth',\r\n        })\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        {top && <button style={{\r\n            position:'fixed',\r\n            bottom:'50px',\r\n            right:'50px',\r\n            height:'50px',\r\n            width:'50px',\r\n            fontSize:'50px'\r\n        }} onClick={ScrollUp}\r\n        >\r\n        <i class=\"fa-solid fa-arrow-up\"></i>\r\n        </button>}\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScrollupButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAGC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAM,CAACC,GAAG,EAAGC,MAAM,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZQ,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAG,MAAM;MACrC,IAAGD,MAAM,CAACE,OAAO,GAAG,GAAG,EAAC;QACpBH,MAAM,CAAC,IAAI,CAAC;MAChB,CAAC,MACG;QACAA,MAAM,CAAC,KAAK,CAAC;MACjB;IACJ,CAAC,CAAC;EACN,CAAC,EAAG,EAAE,CAAC;EAEP,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACnBH,MAAM,CAACI,QAAQ,CAAC;MACZN,GAAG,EAAE,CAAC;MACNO,SAAS,EAAG;IAChB,CAAC,CAAC;EACN,CAAC;EAEH,oBACEV,OAAA;IAAAW,QAAA,EACKR,GAAG,iBAAIH,OAAA;MAAQY,KAAK,EAAE;QACnBC,QAAQ,EAAC,OAAO;QAChBC,MAAM,EAAC,MAAM;QACbC,KAAK,EAAC,MAAM;QACZC,MAAM,EAAC,MAAM;QACbC,KAAK,EAAC,MAAM;QACZC,QAAQ,EAAC;MACb,CAAE;MAACC,OAAO,EAAEX,QAAS;MAAAG,QAAA,eAErBX,OAAA;QAAGoB,KAAK,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGR,CAAC;AAEV,CAAC;AAAAtB,EAAA,CAvCKD,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAyCpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}